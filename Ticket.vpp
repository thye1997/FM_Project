class Ticket

	types
		public Ticket :: ticketId: seq of char
						 issueDateTime : DateTime
						 paidDateTime : DateTime
						 isPaid: bool;

		public paidticket::
			ticketId: seq of char
			price: real
			isPaid: bool;
			
		public TicketList = map seq of char to Ticket;
		public PaidTicketList = map seq of char to Ticket;


	instance variables
		public newTicket: Ticket;
		public paidTicket: paidticket;
		public ticketList : TicketList := { |-> };
		public paidTicketList : PaidTicketList := { |-> };

	operations
		public generateTicket: ()==> Ticket
			generateTicket()==(
			
				newTicket:= mk_Ticket("ID-1234", new DateTime(), new DateTime(), false);
				ticketList := ticketList munion {newTicket.ticketId |-> newTicket };
				return newTicket;
			);
			
	public payTicket:Ticket==> Ticket
		payTicket(tix)==
		(
			dcl ticket :Ticket := tix;
			if ticket.ticketId in set dom ticketList
				then (
					ticket.paidDateTime := new DateTime();
					ticket.isPaid := true;
					paidTicketList := paidTicketList munion {ticket.ticketId |-> ticket };
					return ticket;
				)
			
			else (
				return tix;
			);
		);
	
	public showNewTicket:()==> Ticket
		showNewTicket()==
			(
				return newTicket;
			);

	public showPaidTicket:()==> PaidTicketList
		showPaidTicket()==
			(
				return paidTicketList;
			);

end Ticket